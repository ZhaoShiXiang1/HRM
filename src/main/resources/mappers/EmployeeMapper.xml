<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.hrm.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.hrm.vo.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, phone, email, education, idcard, address, position_id, dept_id, created_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.hrm.vo.Employee" >
    insert into employee (id, name, sex, phone, 
      email, education, idcard, 
      address, position_id, dept_id, 
      created_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{positionId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.hrm.vo.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.hrm.vo.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.hrm.vo.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--多条件查询-->
  <select id="selectAllEmp" parameterType="com.xxxx.hrm.query.EmployeeQuery" resultType="com.xxxx.hrm.vo.Employee">
    select id, name, sex, phone, email, education, idcard, address, position_id positionId, dept_id deptId, created_time createdTime
    from employee
    <where>
      <if test=" null != name and '' != name">
        and name like concat("%",#{name},"%")
      </if>
      <if test=" null != phone and '' != phone">
        and phone = #{phone}
      </if>
    </where>
  </select>


  <!--添加用户-->
  <insert id="addEmp" parameterType="com.xxxx.hrm.vo.Employee" >
    INSERT into employee (name,sex,phone,email,education,idcard,address,position_id,dept_id,created_time)
    VALUES (#{name},#{sex},#{phone},#{email},#{education},#{idcard},#{address},#{positionId},#{deptId},#{createdTime})
  </insert>


  <!--修改用户-->
  <update id="updateEmp" parameterType="com.xxxx.hrm.vo.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>