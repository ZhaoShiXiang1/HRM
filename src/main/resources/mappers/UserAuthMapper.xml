<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.hrm.dao.UserAuthMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.hrm.vo.UserAuth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, is_admin, created_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userauth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userauth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.hrm.vo.UserAuth" >
    insert into userauth (id, username, password, 
      is_admin, created_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{isAdmin,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.hrm.vo.UserAuth" >
    insert into userauth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.hrm.vo.UserAuth" >
    update userauth
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.hrm.vo.UserAuth" >
    update userauth
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      is_admin = #{isAdmin,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--根据用户名查询用户-->
  <select id="queryUserByName" parameterType="string" resultType="com.xxxx.hrm.vo.UserAuth">
    select * from userauth where username = #{username}
  </select>

  <!--查询对应的角色名称和id反馈给前台使用-->
  <select id="queryAllUserAuths" resultType="map">
    select username,id,is_admin isAdmin,created_time createdTime
    from userauth
    <where>
      <if test="username != null and username != ''">
        and username like concat("%",#{username},"%")
      </if>
      <if test="id != null and id != ''">
        and id = #{id}
      </if>
    </where>

  </select>

</mapper>